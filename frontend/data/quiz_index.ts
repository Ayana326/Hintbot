export const quizzes = [
  {
    id: "0000001",
    type: "print",
    title: "print文 1",
    abstract: "Hello Worldの出力",
    content: "「 Hello World 」と出力してください",
  },
  {
    id: "0000002",
    type: "print",
    title: "print文 2",
    abstract: "数値の出力",
    content: "数値の 7 を出力してください",
  },
  {
    id: "0000003",
    type: "print",
    title: "print文 3",
    abstract: "計算結果の出力",
    content: "5 を 2 で割った時の余りを出力してください",
  },
  {
    id: "0000004",
    type: "variable",
    title: "変数 1",
    abstract: "文字列の代入",
    content: "変数 name に文字列「 山田太郎 」を代入して、出力してください",
  },
  {
    id: "0000005",
    type: "variable",
    title: "変数 2",
    abstract: "数値の代入",
    content: "変数 num に 1 を足して、変数 numを上書きした結果を出力してください",
  },
  {
    id: "0000006",
    type: "conditional_branch",
    title: "if文 1",
    abstract: "単独の条件分岐",
    content: "変数 age が18以上の場合、「成人です。」と出力してください",
  },
  {
    id: "0000007",
    type: "conditional_branch",
    title: "if文 2",
    abstract: "単独の条件分岐",
    content:
      "変数 age が18以上の場合、「成人です。」, 変数 age が18未満の場合、「未成年です。」と出力してください",
  },
  {
    id: "0000008",
    type: "conditional_branch",
    title: "if文 3",
    abstract: "複数の条件分岐",
    content:
      "変数 age が18以上の場合、「成人です。」 変数 age が18未満の場合、「未成年です。」, 変数 age が65以上の場合、「高齢者です。」と出力してください",
  },
  {
    id: "0000009",
    type: "loop",
    title: "for文 1",
    abstract: "for文を使ったループ処理1",
    content: "ループ処理を用いて0から10まで出力してください",
  },
  {
    id: "0000010",
    type: "loop",
    title: "for文 2",
    abstract: "for文を使ったループ処理2",
    content: "ループ処理を用いて1から10まで出力してください",
  },
  {
    id: "0000011",
    type: "comprehensive",
    title: "FizzBuzz",
    abstract: "出力・数値計算・条件分岐・ループ処理の総合問題",
    content: `1から100までの数字について、以下の条件に合った出力を行ってください。

3の倍数のときは「Fizz」を出力
5の倍数のときは「Buzz」を出力
3の倍数かつ5の倍数のときは「FizzBuzz」を出力
それ以外の場合は数字そのものを出力
    `,
  },
  {
    id: "0000012",
    type: "dynamic_planning",
    title: "A. カエルのジャンプ",
    abstract: "最短コストで足場Nまで辿り着く経路を求める動的計画法の問題",
    content: `N 個の足場があり、それぞれの足場には高さが設定されています。最初の足場から始めて、次の足場へジャンプする際にはコストがかかります。カエルが足場Nに辿り着くまでに支払うコストの総和の最小値を求める問題です。

足場 i から足場 i+1 または i+2 へジャンプする場合、コストは |h_i - h_j| です。この最小コストを求めてください。

**入力形式**

入力は以下の形式で標準入力から与えられます。
N
h_1
h_2
...
h_N

**出力形式**

カエルが支払うコストの総和の最小値を出力してください。

**制約**

- 2 ≤ N ≤ 10^5
- 1 ≤ h_i ≤ 10^4

**入力例 1**

4
10 30 40 20

**出力例 1**

30

足場 1 → 2 → 4 と移動すると、コストの総和は |10 - 30| + |30 - 20| = 30 となります。

**入力例 2**

2
10 10

**出力例 2**

0

足場 1 → 2 と移動すると、コストの総和は |10 - 10| = 0 となります。

**入力例 3**

6
30 10 60 10 60 50

**出力例 3**

40

足場 1 → 3 → 5 → 6 と移動すると、コストの総和は |30 - 60| + |60 - 60| + |60 - 50| = 40 となります。
(この問題は次のページを参考にして作成しました: https://atcoder.jp/contests/dp/tasks/dp_a)
`
  },
  {
    id: "0000013",
    type: "dynamic_planning",
    title: "B. カエルのジャンプ（一般化版）",
    abstract: "最短コストで足場Nまで辿り着く経路を求める動的計画法の問題（ジャンプ範囲がKの場合）",
    content: `N 個の足場があり、それぞれの足場には高さが設定されています。最初の足場から始めて、次の足場へジャンプする際にはコストがかかります。カエルが足場Nに辿り着くまでに支払うコストの総和の最小値を求める問題です。ジャンプできる範囲は足場 i から足場 i+1 から i+K のいずれかです。

足場 i から足場 i+1 から i+K へジャンプする場合、コストは |h_i - h_j| です。この最小コストを求めてください。

**入力形式**

入力は以下の形式で標準入力から与えられます。
N
K
h_1
h_2
...
h_N

**出力形式**

カエルが支払うコストの総和の最小値を出力してください。

**制約**

- 2 ≤ N ≤ 10^5
- 1 ≤ K ≤ 100
- 1 ≤ h_i ≤ 10^4

**入力例 1**

5 3
10 30 40 50 20

**出力例 1**

30

足場 1 → 2 → 5 と移動すると、コストの総和は |10 - 30| + |30 - 20| = 30 となります。

**入力例 2**

3 1
10 20 10

**出力例 2**

20

足場 1 → 2 → 3 と移動すると、コストの総和は |10 - 20| + |20 - 10| = 20 となります。

**入力例 3**

2 100
10 10

**出力例 3**

0

足場 1 → 2 と移動すると、コストの総和は |10 - 10| = 0 となります。

**入力例 4**

10 4
40 10 20 70 80 10 20 70 80 60

**出力例 4**

40

足場 1 → 4 → 8 → 10 と移動すると、コストの総和は |40 - 70| + |70 - 70| + |70 - 60| = 40 となります。
(この問題は次のページを参考にして作成しました: https://atcoder.jp/contests/dp/tasks/dp_b)
`
  },
  {
    id: "0000014",
    type: "dynamic_planning",
    title: "C. Vacation",
    abstract: "最大幸福度を得るための活動選択問題。連続して同じ活動を行わずに、最適な計画を立てる動的計画法の問題。",
    content: `明日から太郎君の夏休みが始まります。太郎君は夏休みの計画を立てることにしました。

夏休みは N 日からなります。各 \(i\) (\(1 \leq i \leq N\)) について、\(i\) 日目には太郎君は次の活動のうちひとつを選んで行います。

- A: 海で泳ぐ。幸福度 \(a_i\) を得る。
- B: 山で虫取りをする。幸福度 \(b_i\) を得る。
- C: 家で宿題をする。幸福度 \(c_i\) を得る。

太郎君は飽き性なので、2 日以上連続で同じ活動を行うことはできません。

太郎君が得る幸福度の総和の最大値を求めてください。

**入力形式**

入力は以下の形式で標準入力から与えられます。
N
a_1
b_1
c_1
a_2
b_2
c_2
...
a_N
b_N
c_N

**出力形式**

太郎君が得る幸福度の総和の最大値を出力してください。

**制約**

- 1 ≤ N ≤ 10^5
- 1 ≤ a_i, b_i, c_i ≤ 10^4

**入力例 1**

3
10 40 70
20 50 80
30 60 90

**出力例 1**

210

C, B, C の順に活動を行うと、幸福度の総和は 70 + 50 + 90 = 210 となります。

**入力例 2**

1
100 10 1

**出力例 2**

100

**入力例 3**

7
6 7 8
8 8 3
2 5 2
7 8 6
4 6 8
2 3 4
7 5 1

**出力例 3**

46

C, A, B, A, C, B, A の順に活動を行えばよいです。
(この問題は次のページを参考にして作成しました: https://atcoder.jp/contests/dp/tasks/dp_c)

`
  },
  {
    id: "0000015",
    type: "dynamic_planning",
    title: "D. Knapsack 1",
    abstract: "ナップサック問題。最大価値を求める動的計画法の問題。",
    content: `N 個の品物があります。品物には 1, 2, …, N と番号が振られています。各 \(i\) (\(1 \leq i \leq N\)) について、品物 \(i\) の重さは \(w_i\) で、価値は \(v_i\) です。

太郎君は、N 個の品物のうちいくつかを選び、ナップサックに入れて持ち帰ることにしました。ナップサックの容量は \(W\) であり、持ち帰る品物の重さの総和は \(W\) 以下でなければなりません。

太郎君が持ち帰る品物の価値の総和の最大値を求めてください。

**入力形式**

入力は以下の形式で標準入力から与えられます。
N
W
w_1
v_1
w_2
v_2
...
w_N
v_N

**出力形式**

太郎君が持ち帰る品物の価値の総和の最大値を出力してください。

**制約**

- 1 ≤ N ≤ 100
- 1 ≤ W ≤ 10^5
- 1 ≤ w_i ≤ W
- 1 ≤ v_i ≤ 10^9

**入力例 1**

3 8
3 30
4 50
5 60

**出力例 1**

90

品物 1, 3 を選べばよいです。すると、重さの総和は 3 + 5 = 8 となり、価値の総和は 30 + 60 = 90 となります。

**入力例 2**

5 5
1 1000000000
1 1000000000
1 1000000000
1 1000000000
1 1000000000

**出力例 2**

5000000000

答えは 32-bit 整数型に収まらない場合があります。

**入力例 3**

6 15
6 5
5 6
6 4
6 6
3 5
7 2

**出力例 3**

17

品物 2, 4, 5 を選べばよいです。すると、重さの総和は 5 + 6 + 3 = 14 となり、価値の総和は 6 + 6 + 5 = 17 となります。
(この問題は次のページを参考にして作成しました: https://atcoder.jp/contests/dp/tasks/dp_d)
`
  }
];
